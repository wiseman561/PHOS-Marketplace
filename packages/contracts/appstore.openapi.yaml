openapi: 3.0.3
info:
  title: PHOS App Store API
  version: 0.1.0
servers:
  - url: http://localhost:5190
    description: App Store service (dev)
paths:
  /healthz:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /api/info:
    get:
      summary: Service info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: { type: string, example: appstore }
                  version: { type: string, example: 0.1.0 }
  /api/store/apps:
    get:
      summary: List available apps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreApp'
  /api/store/apps/{appId}/install:
    post:
      summary: Install an app for a user
      parameters:
        - in: path
          name: appId
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallRequest'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema: { type: string }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Install'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/store/installs:
    get:
      summary: List installs (optionally filter by userId)
      parameters:
        - in: query
          name: userId
          required: false
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Install'
  /api/store/installs/{id}:
    get:
      summary: Get a specific install by id
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Install'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    StoreApp:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        description: { type: string }
      required: [id, name]
    InstallRequest:
      type: object
      properties:
        userId: { type: string }
      required: [userId]
    Install:
      type: object
      properties:
        id: { type: string, format: uuid }
        userId: { type: string }
        appId: { type: string }
        installedAt: { type: string, format: date-time }
      required: [id, userId, appId, installedAt]
    ErrorResponse:
      type: object
      properties:
        error: { type: string }
      required: [error]
